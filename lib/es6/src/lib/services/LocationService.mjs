// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

var storageKey = "created_locations";

function getLocations() {
  var locationsJson = localStorage.getItem(storageKey);
  if (locationsJson === null) {
    return Belt_List.fromArray([]);
  }
  var parsed;
  try {
    parsed = JSON.parse(locationsJson);
  }
  catch (exn){
    return Belt_List.fromArray([]);
  }
  var array = Js_json.decodeArray(parsed);
  if (array !== undefined) {
    return Belt_List.fromArray(Belt_Array.keepMap(array, (function (item) {
                      var obj = Js_json.decodeObject(item);
                      if (obj === undefined) {
                        return ;
                      }
                      var id = Belt_Option.flatMap(Js_dict.get(obj, "id"), Js_json.decodeString);
                      var name = Belt_Option.flatMap(Js_dict.get(obj, "name"), Js_json.decodeString);
                      var createdAt = Belt_Option.flatMap(Js_dict.get(obj, "createdAt"), Js_json.decodeNumber);
                      if (id !== undefined && name !== undefined && createdAt !== undefined) {
                        return {
                                id: id,
                                name: name,
                                createdAt: createdAt
                              };
                      }
                      
                    })));
  } else {
    return Belt_List.fromArray([]);
  }
}

function addLocation(id, name) {
  var locations = getLocations();
  var newLocation_createdAt = Date.now();
  var newLocation = {
    id: id,
    name: name,
    createdAt: newLocation_createdAt
  };
  var newLocations = {
    hd: newLocation,
    tl: locations
  };
  var jsonArray = Belt_Array.map(Belt_List.toArray(newLocations), (function (loc) {
          var dict = {};
          dict["id"] = loc.id;
          dict["name"] = loc.name;
          dict["createdAt"] = loc.createdAt;
          return dict;
        }));
  localStorage.setItem(storageKey, JSON.stringify(jsonArray));
  return newLocation;
}

function removeLocation(id) {
  var locations = getLocations();
  var filteredLocations = Belt_List.keep(locations, (function (loc) {
          return loc.id !== id;
        }));
  var jsonArray = Belt_Array.map(Belt_List.toArray(filteredLocations), (function (loc) {
          var dict = {};
          dict["id"] = loc.id;
          dict["name"] = loc.name;
          dict["createdAt"] = loc.createdAt;
          return dict;
        }));
  localStorage.setItem(storageKey, JSON.stringify(jsonArray));
}

export {
  storageKey ,
  getLocations ,
  addLocation ,
  removeLocation ,
}
/* No side effect */
