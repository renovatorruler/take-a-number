// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Db from "../Db";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as BrowserId from "../BrowserId";
import * as Store from "svelte/store";

function getBrowserId(prim) {
  return BrowserId.get();
}

var numbers = Db.numbers;

function initNumberManager(locationId) {
  var numberStore = Store.writable(0);
  var reservedNumberStore = Store.writable(undefined);
  var browserId = BrowserId.get();
  numbers.get(locationId).get("current").once(function (number) {
        if (number !== undefined) {
          return ;
        } else {
          numbers.get(locationId).get("current").put("0");
          return ;
        }
      });
  numbers.get(locationId).get("reservations").get(browserId).once(function (reservation) {
        if (reservation === undefined) {
          return ;
        }
        var num = Belt_Option.getWithDefault(Belt_Int.fromString(reservation), 0);
        if (num > 0) {
          reservedNumberStore.set(num);
          return ;
        }
        
      });
  numbers.get(locationId).get("current").on(function (number) {
        if (number !== undefined) {
          numberStore.set(Belt_Option.getWithDefault(Belt_Int.fromString(number), 0));
        } else {
          numberStore.set(0);
        }
      });
  var takeNumber = function () {
    numbers.get(locationId).get("current").once(function (number) {
          if (number === undefined) {
            return ;
          }
          var nextNumber = Belt_Option.getWithDefault(Belt_Int.fromString(number), 0) + 1 | 0;
          numbers.get(locationId).get("current").put(String(nextNumber));
          numbers.get(locationId).get("reservations").get(browserId).put(String(nextNumber));
          reservedNumberStore.set(nextNumber);
        });
  };
  var relinquishNumber = function () {
    numbers.get(locationId).get("reservations").get(browserId).put("");
    reservedNumberStore.set(undefined);
  };
  return [
          numberStore,
          reservedNumberStore,
          takeNumber,
          relinquishNumber
        ];
}

export {
  getBrowserId ,
  numbers ,
  initNumberManager ,
}
/* numbers Not a pure module */
