// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Db from "../Db.mjs";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as BrowserId from "../BrowserId";
import * as Store from "svelte/store";

function getBrowserId(prim) {
  return BrowserId.get();
}

function initNumberManager(locationId) {
  var store = Store.writable("Loading");
  var browserId = BrowserId.get();
  if (Db.numbers === undefined) {
    return {
            state: store,
            dispatch: (function (param) {
                return {
                        TAG: "Error",
                        _0: "DatabaseError"
                      };
              })
          };
  }
  var numbers = Caml_option.valFromOption(Db.numbers);
  numbers.get(locationId).get("reservations").get(browserId).once(function (reservationValue) {
        var existingReservation = Belt_Option.map(Belt_Option.flatMap((reservationValue == null) ? undefined : Caml_option.some(reservationValue), Belt_Int.fromString), (function (n) {
                return n;
              }));
        numbers.get(locationId).get("current").once(function (value) {
              var current = Belt_Option.flatMap((value == null) ? undefined : Caml_option.some(value), Belt_Int.fromString);
              if (current !== undefined) {
                store.set({
                      TAG: "Ready",
                      currentNumber: current,
                      reservation: existingReservation
                    });
              } else {
                numbers.get(locationId).get("current").put("0");
                store.set({
                      TAG: "Ready",
                      currentNumber: 0,
                      reservation: existingReservation
                    });
              }
            });
      });
  numbers.get(locationId).get("current").on(function (value) {
        var state = Store.get(store);
        if (typeof state !== "object") {
          return ;
        }
        var current = Belt_Option.flatMap((value == null) ? undefined : Caml_option.some(value), Belt_Int.fromString);
        if (current !== undefined) {
          store.set({
                TAG: "Ready",
                currentNumber: current,
                reservation: state.reservation
              });
          return ;
        }
        
      });
  var dispatch = function (action) {
    var match = Store.get(store);
    if (action !== "TakeNumber") {
      if (typeof match !== "object") {
        return {
                TAG: "Error",
                _0: "DatabaseError"
              };
      } else if (match.reservation !== undefined) {
        numbers.get(locationId).get("reservations").get(browserId).put("");
        store.set({
              TAG: "Ready",
              currentNumber: match.currentNumber,
              reservation: undefined
            });
        return {
                TAG: "Ok",
                _0: undefined
              };
      } else {
        return {
                TAG: "Error",
                _0: "NoNumberToRelinquish"
              };
      }
    }
    if (typeof match !== "object") {
      return {
              TAG: "Error",
              _0: "DatabaseError"
            };
    }
    var current = match.currentNumber;
    if (match.reservation !== undefined) {
      return {
              TAG: "Error",
              _0: "AlreadyHasNumber"
            };
    } else {
      numbers.get(locationId).get("current").put(String(current + 1 | 0));
      numbers.get(locationId).get("reservations").get(browserId).put(String(current));
      store.set({
            TAG: "Ready",
            currentNumber: current + 1 | 0,
            reservation: current
          });
      return {
              TAG: "Ok",
              _0: undefined
            };
    }
  };
  return {
          state: store,
          dispatch: dispatch
        };
}

export {
  getBrowserId ,
  initNumberManager ,
}
/* Db Not a pure module */
